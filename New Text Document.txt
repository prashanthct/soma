 package com.example.MongoDB.Controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.example.MongoDB.entity.*;
import com.example.MongoDB.Repository.*;
import java.util.*;
@RestController
public class BookController {
	@Autowired
	private BookRepo repo;
    @PostMapping("/addBook")
    public String saveBook(@RequestBody Book book) {
    	repo.save(book);
    	return "Added successfully";
    }
    @GetMapping("/findAllBooks")
    public List<Book> getBooks(){
    	return repo.findAll();
    }
    @DeleteMapping("/delete/{id}")
    public String deleteBook(@PathVariable int id) {
    	repo.deleteById(id);
		return "Deleted Successfully";
    }
}

controller





package com.example.MongoDB.entity;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;
import lombok.Data;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
@Data
@AllArgsConstructor
@NoArgsConstructor
@Document(collection = "Book")
public class Book {
@Id
private int id;
private String bookName;
private String authorName;
public int getId() {
		return id;
}
public void setId(int id) {
	this.id = id;
	}
public String getBookName() {
	return bookName;
}
public void setBookName(String bookName) {
this.bookName = bookName;
}
public String getAuthorName() {
	return authorName;
}
public void setAuthorName(String authorName) {
this.authorName = authorName;
}
}
book.java


spring.application.name=MongoDB
server.port=8989
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=BookStore

apppppp


package com.example.MongoDB.Repository;
import org.springframework.data.mongodb.repository.MongoRepository;
import com.example.MongoDB.entity.*;
public interface BookRepo
       extends MongoRepository<Book,Integer> {

}


repo